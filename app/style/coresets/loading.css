page-preloader, #preloader {
  position: fixed;
  inset: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  z-index: 10000;
  background: url(../../../resources/svg/pattern_asanoha_90deg.svg) no-repeat, var(--banner_gradient);
  background-position: center 50%;
  background-size: 110%;
  color: wheat;
  font-weight: 800;
  transition: all 0.3s ease;
  
  .preloader-logo {
    margin-top: calc(50vh - 128px);
  }
}
page-preloader ~ *, #preloader ~ * {transition: all 0.3s ease;}
page-preloader ~ .hidden-for-preloader, #preloader ~ .hidden-for-preloader {
  opacity: 0;
  pointer-events: none;
  overflow: hidden;
}
page-preloader ~ .noscroll-for-preloader, #preloader ~ .noscroll-for-preloader {
  pointer-events: none;
  overflow: hidden;
}

page-preloader::before, #preloader::before {
  --bgdark: rgba(0, 0, 0, 0.7);
  content: '';
  position: absolute;
  inset: 0;
  background: var(--bgdark);
  box-shadow: inset 0 0 400px 150px var(--bgdark);
  z-index: -1;
  transition: all 0.3s ease;
}

.preloader-logo {
  height: 128px;
  width: 128px;
  background-size: 90%;
  background-repeat: no-repeat;
  background-position: center;
  border: 10px solid #ffca43;
  border-radius: 50%;
  overflow: hidden;
  animation: pulsedLoadingProgress 2s linear infinite;
  filter: brightness(100%) drop-shadow(0px 0px 1px var(--kamon_red)) drop-shadow(0px 3px 1px var(--color_gold_light));
  transition: all 0.3s ease;
  z-index: 1000;
}
page-preloader .preloader-logo, #preloader .preloader-logo {
    margin-bottom: 35px;
}

.preloader-logo :has(img) {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 50px;
  transition: all 0.3s ease;
}

.preloader-logo img {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50px;
  filter: brightness(100%) drop-shadow(0px 0px 1px var(--kamon_red)) drop-shadow(0px 3px 1px var(--color_gold_light));
  animation: pulsedLoadingProgress 2s linear infinite;
  width: 95%;
  height: 95%;
  object-fit: cover;
  object-position: center;
  transition: all 0.3s ease;
}

page-preloader :has(progress), #preloader :has(progress) {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.preloader-progress {
  position: relative;
}

page-preloader .progress-value, #preloader .progress-value {
  margin-top: 10px;
  margin-bottom: 25px;
}
.progress-value {
  position: relative;
  display: flex;
  height: 16px;
  border-radius: 15px;
  border: none;
  background-color: white;
  box-shadow: inset 0 1px 3px 1px var(--shadow_secondary), 0 3px 2px var(--shadow_inset_info);
  overflow: hidden;
}

.progress-value::after {
  content: '';
  display: flex;
  width: var(--progress);
  height: 100%;
  background-color: var(--color_dark_gold);
  box-shadow: inset 3px 3px 3px 1px var(--color_dark_gold_emboss), 0 1px 3px 1px var(--shadow_secondary);
}

.loadmarker-dots::after {
  content: '';
  animation: loadingTextDots 2s linear infinite;
}

.loadmarker-dots.ja::after {
  animation: loadingTextDots-ja 2s linear infinite;
}

.loadmarker-slashes::after {
  content: '\002F';
  font-family: 'Source Code Pro', sans-serif;
  animation: loadingTextSlashes 0.5s linear infinite;
}

.loadmarker-percent::after {
  content: '%';
}

/* ================================== ANIMATIONS ==================================== */

@keyframes loadingTextDots {
  20% {
    content: '.';
  }

  40% {
    content: '..';
  }

  60% {
    content: '...';
  }

  80% {
    content: '....';
  }

  100% {
    content: '';
  }
}

@keyframes loadingTextDots-ja {
  20% {
    content: '。';
  }

  40% {
    content: '。。';
  }

  60% {
    content: '。。。';
  }

  80% {
    content: '。。。。';
  }

  100% {
    content: '';
  }
}

@keyframes loadingTextSlashes {
  0% {
    content: '\002F';
  }

  30% {
    content: '\007C';
  }

  60% {
    content: '\005C';
  }

  80% {
    content: '\2015';
  }
}

@keyframes pulsedLoadingProgress {
  0% {
    filter: brightness(100%) drop-shadow(0px 3px 1px var(--color_gold_light));
  }

  10% {
    filter: brightness(200%) drop-shadow(0px 3px 1px var(--color_gold_light));
  }

  25% {
    filter: brightness(200%) drop-shadow(0px 3px 10px var(--color_gold_selected));
  }
}




/* ================================ LOCAL ADAPTIVES ================================ */

@media screen and (max-width: 900px) {
  #preloader {
    background-size: 150%;
  }
  #preloader::before {
    box-shadow: inset 0 0 200px 100px var(--bgdark);
  }
}

@media screen and (max-width: 600px) {
  #preloader {
    background-size: 250%;
  }
  #preloader::before {
    box-shadow: inset 0 0 150px 75px var(--bgdark);
  }
}

@media screen and (max-width: 600px) {
  #preloader {
    background-size: 250%;
  }
  #preloader::before {
    box-shadow: inset 0 0 75px 40px var(--bgdark);
  }
}

@media screen and (max-width: 350px) {
  #preloader {
    background-size: 350%;
  }
}

@media screen and (max-width: 270px) {
  #preloader {
    background-size: 500%;
  }
  #preloader::before {
    box-shadow: inset 0 0 50px 10px var(--bgdark);
  }
}






/* ================================ THIRD PARTY ================================ */
/* SAMPLE OF USE : <div class="load_circle" style="--b: 20px;--c:#333;width:80px;--n:20;--g:8deg"></div> */
/* FROM : https: //css-tricks.com/single-element-loaders-the-spinner/ : */

.load_circle {
  --b: 10px;
  --n: 10;
  --g: 10deg;
  --c: red;

  width: 100px;
  aspect-ratio: 1;
  border-radius: 50%;
  padding: 1px;
  background: conic-gradient(#0000, var(--c)) content-box;
  --_m:
    repeating-conic-gradient(#0000 0deg,
      #000 1deg calc(360deg/var(--n) - var(--g) - 1deg),
      #0000 calc(360deg/var(--n) - var(--g)) calc(360deg/var(--n))),
    radial-gradient(farthest-side, #0000 calc(98% - var(--b)), #000 calc(100% - var(--b)));
  -webkit-mask: var(--_m);
  mask: var(--_m);
  -webkit-mask-composite: destination-in;
  mask-composite: intersect;
  animation: load_circle_anim 1s infinite steps(var(--n));
}

@keyframes load_circle_anim {
  to {
    transform: rotate(1turn)
  }
}

.snigle_circle_spinner {
  width: 50px;
  padding: 8px;
  background: #07e8d6;

  aspect-ratio: 1;
  border-radius: 50%;
  --_m:
    conic-gradient(#0000, #000),
    linear-gradient(#000 0 0) content-box;
  -webkit-mask: var(--_m);
  mask: var(--_m);
  -webkit-mask-composite: source-out;
  mask-composite: subtract;
  box-sizing: border-box;
  animation: snigle_circle_spinner_anim 1s linear infinite;
}

@keyframes snigle_circle_spinner_anim {
  to {
    transform: rotate(1turn)
  }
}

.snigle_circle_spinner_round {
  width: 50px;
  aspect-ratio: 1;
  border-radius: 50%;
  background:
    radial-gradient(farthest-side, #ffa516 94%, #0000) top/8px 8px no-repeat,
    conic-gradient(#0000 30%, #ffa516);
  -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 8px), #000 0);
  mask: radial-gradient(farthest-side, #0000 calc(100% - 8px), #000 0);
  animation: snigle_circle_spinner_round_anim 1s infinite linear;
}

@keyframes snigle_circle_spinner_round_anim {
  100% {
    transform: rotate(1turn)
  }
}

.wheel_spinner {
  width: 50px;
  aspect-ratio: 1;
  color: #854f1d;
  border-radius: 50%;
  display: grid;
  background:
    conic-gradient(from 90deg at 4px 4px, #0000 90deg, currentColor 0) -4px -4px/calc(50% + 2px) calc(50% + 2px),
    radial-gradient(farthest-side, currentColor 6px, #0000 7px calc(100% - 6px), currentColor calc(100% - 5px)) no-repeat;
  animation: wheel_spinner_anim 2s infinite linear;
  position: relative;
}

.wheel_spinner:before {
  content: "";
  border-radius: inherit;
  background: inherit;
  transform: rotate(45deg);
}

@keyframes wheel_spinner_anim {
  to {
    transform: rotate(.5turn)
  }
}

.gear_spinner {
  width: 50px;
  aspect-ratio: 1;
  display: grid;
  color: #854f1d;
  background: radial-gradient(farthest-side, currentColor calc(100% - 6px), #0000 calc(100% - 5px) 0);
  -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 13px), #000 calc(100% - 12px));
  mask: radial-gradient(farthest-side, #0000 calc(100% - 13px), #000 calc(100% - 12px));
  border-radius: 50%;
  animation: gear_spinner_anim 2s infinite linear;
}

.gear_spinner::before,
.gear_spinner::after {
  content: "";
  grid-area: 1/1;
  background:
    linear-gradient(currentColor 0 0) center,
    linear-gradient(currentColor 0 0) center;
  background-size: 100% 10px, 10px 100%;
  background-repeat: no-repeat;
}

.gear_spinner::after {
  transform: rotate(45deg);
}

@keyframes gear_spinner_anim {
  100% {
    transform: rotate(1turn)
  }
}