name: CI Workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - "app/data/repository/repository-info.json"
      - "report.md"

jobs:
  lint_check_links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Install htmlhint
        run: npm install @linthtml/linthtml --save-dev

      - name: Run linters
        id: lint
        run: |
          npx eslint '**/*.{js,jsx,ts,tsx}' --format stylish > lint-results.txt || true
          npx stylelint '**/*.{css,scss}' --formatter verbose > stylelint-results.txt || true
          npx linthtml '**/*.html' | tee htmlhint-results.txt
          npx jsonlint '**/*.json' -q > jsonlint-results.txt || true
          find . -name '*.xml' -exec xmllint --noout {} \; > xmllint-results.txt 2>&1 || true
          cat lint-results.txt stylelint-results.txt htmlhint-results.txt jsonlint-results.txt xmllint-results.txt > lint-output.txt

      - name: Check for broken links
        id: links
        run: |
          npx linkinator . -r --skip "data:,about:blank" > link-results.txt || true

      - name: Generate report
        run: |
          echo "# Ссылки" > report.md
          if grep -q "BROKEN" link-results.txt; then
            echo "Найдены битые ссылки:" >> report.md
            grep "BROKEN" link-results.txt >> report.md
          else
            echo "Битых ссылок не найдено" >> report.md
          fi

          echo "# Линтинг" >> report.md
          echo "## HTML" >> report.md
          cat htmlhint-results.txt >> report.md

      - name: Check for changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add report.md
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit and push."
            exit 0
          fi

      - name: Commit and push changes
        env:
          GITHUB_REPOSITORY: ${{ secrets.SUPER_SECRET }}
        run: |
          git pull origin main --ff-only
          git commit -m "Add CI report"
          git push origin HEAD:${{ github.ref }}
